import time
import os
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler
from plyer import notification

class DownloadHandler(FileSystemEventHandler):
    def __init__(self):
        super().__init__()
        self.last_file = None

    def on_created(self, event):
        if event.is_directory:
            return
        self.last_file = event.src_path
        notification.notify(
            title='Download Alert',
            message='A download occurred',
            app_name='Download Monitor',
            timeout=5
        )

    def on_modified(self, event):
        if event.is_directory:
            return
        if self.last_file and os.path.basename(event.src_path) != os.path.basename(self.last_file):
            self.last_file = event.src_path

    def on_moved(self, event):
        if event.is_directory:
            return
        self.last_file = event.dest_path

if __name__ == "__main__":
    path_to_watch = r"C:\Users\dkasd\Downloads"  # Change this to your Downloads folder path
    event_handler = DownloadHandler()
    observer = Observer()
    observer.schedule(event_handler, path=path_to_watch, recursive=False)
    
    print(f"Monitoring {path_to_watch} for new downloads...")
    observer.start()

    try:
        while True:
            time.sleep(1)
            if event_handler.last_file:
                print(f"Downloaded: {event_handler.last_file}")
                event_handler.last_file = None
    except KeyboardInterrupt:
        observer.stop()
    observer.join()
